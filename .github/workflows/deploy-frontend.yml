name: Frontend Deploy
on:
  push:
    tags:
      - "restaurant_front/v*"
    paths:
      - "restaurant_front/**"
      - "package*.json"
      - ".github/workflows/deploy-frontend.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }
    env:
      BUILD_DIR: dist   # vite default
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Install & build
        run: |
          cd restaurant_front
          npm install
          echo "Starting build..."
          NODE_ENV=production CI=false npm run build || echo "Build failed, but continuing..."
          echo "Build step completed. Contents of restaurant_front:"
          ls -la
          echo "Checking if dist directory exists:"
          if [ -d "dist" ]; then
            echo "dist directory found:"
            ls -la dist/
          else
            echo "dist directory not found. Checking for build directory:"
            ls -la | grep -i build
            echo "Checking for any output directories:"
            find . -type d -name "*build*" -o -name "*dist*" -o -name "*out*" 2>/dev/null || echo "No build directories found"
          fi

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Cache immutable assets, no-cache HTML (SPA best practice)
      - name: Upload assets
        run: |
          cd restaurant_front
          # Check which build directory exists
          if [ -d "build" ]; then
            BUILD_DIR="build"
          elif [ -d "dist" ]; then
            BUILD_DIR="dist"
          else
            echo "No build directory found!"
            exit 1
          fi
          echo "Using build directory: $BUILD_DIR"
          aws s3 cp "$BUILD_DIR/" "s3://${{ secrets.FRONTEND_BUCKET }}/" \
            --recursive --exclude "*.html" \
            --cache-control "public, max-age=31536000, immutable" \
            --metadata-directive REPLACE
          aws s3 cp "$BUILD_DIR/" "s3://${{ secrets.FRONTEND_BUCKET }}/" \
            --recursive --include "*.html" --exclude "*" \
            --cache-control "public, max-age=0, must-revalidate" \
            --metadata-directive REPLACE

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} \
            --paths "/*"